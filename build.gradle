plugins {
    id("fabric-loom") version("0.5-SNAPSHOT") apply false
    id("net.minecrell.licenser") version("0.4.1")
    id("java")
    id("idea")
}

group = "mekanism"
version = "${project.mod_version}+${project.minecraft_version}"
archivesBaseName = "Mekanism"

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'net.minecrell.licenser'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

    loom {
        shareCaches = true
    }

    repositories {
    }

    afterEvaluate {
        processResources {
            filesMatching('fabric.mod.json') {
                expand 'version': project.version
            }
            inputs.property "version", project.version
        }

        license {
            header rootProject.file('HEADER')
            include '**/*.java'
        }

        jar {
            from rootProject.file("LICENSE")
        }
    }

    dependencies {
        minecraft("com.mojang:minecraft:${project.minecraft_version}")
        mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
        modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

        modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

        modImplementation("io.github.prospector:modmenu:${modmenu_version}") {
            transitive(false)
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier("sources")
        from sourceSets.main.allSource
    }
}

subprojects {
    group = rootProject.group
    version = rootProject.version
}

defaultTasks 'fullBuild'
